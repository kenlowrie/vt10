<?php

/*
** This file contains the SQL Database functions for the PROJECTNAMEHERE.
*/

include_once ('sql.logininfo.php');     // This file defines db_user(), db_pass() and db_name() used below

/*
** Connect to the database. Return the link, so the connecton can be closed.
*/
function db_connect()
{
    $link = mysql_connect('localhost', db_user(), db_pass()) or die("cannot connect to database");
	mysql_select_db(db_name());

    return $link;
}

/*
** Create the 'info' table in the movie database.
**
** This code was generated by phpMyAdmin which I have running on www.kenlowrie.com
** It is a very useful application for administration of your MySQL databases, and
** I really like it because you can always ask it to "show you the PHP code" for
** any of it's operations.
*/
function db_create_table()
{
   	$link = db_connect();

	$sql = 'CREATE TABLE `info` ('
        . ' `uid` INT UNSIGNED NOT NULL AUTO_INCREMENT, '
        . ' `title` VARCHAR(255) NOT NULL, '
        . ' PRIMARY KEY (`uid`),'
        . ' INDEX (`title`)'
        . ' )'
        . ' ENGINE = InnoDB'
        . ' COMMENT = \'ABOUT THIS TABLE\''; 

	$result = mysql_query($sql);
	mysql_close($link);
}

/*
** Drop the table from the database. This is an administration function.
*/
function db_drop_table()
{
   	$link = db_connect();

	$sql = "DROP TABLE `info`";
	$result = mysql_query($sql);
	mysql_close($link);
}

/*
** Insert a row into the 'info' table. Return the result from MySQL
*/
function db_insert_row($title)
{
	$sql = "INSERT INTO `info` (`title`) 
			VALUES ('$title')";

	$result = mysql_query($sql);
	return $result;
}

/*
** Load the table from the file 'movies-in.txt' on the server. This function
** is useful to do an initial load on the database, either when testing or
** if you are recovering from backup. See also db_dump_to_file().
*/
function db_load_from_file()
{
     // connect to the database and open the input file
	$link = db_connect();
	$fd = fopen(TEXTFILENAME_IN,"r") or die("Can't open filename " . TEXTFILENAME_IN);

	$count = 1;
	while (!feof($fd)){          // until you reach EOF on the file
        $line = fgets($fd);      // read a line from the file
		if (feof($fd)) break;    // don't process the last empty line
	
		$count += 1;             // keep track of how many

          /*
          ** Now go through and break the line down into tokens. There should
          ** be six of them, if not, then ignore the line and continue.
          **
          ** Each token is separated by a ';', and each token is surrounded by ".
          ** strip the " from the token, because we don't want to have the quotes
          ** on the fields in the database.
          */     
		$token_count = 0;
    	     $token = strtok($line,';');
		while($token){
			$token_count += 1;
			$value = $token;
			if ($value[0] == '"') $value = substr($value,1);
			if ($value[strlen($value)-1] == '"') $value = substr($value,0,strlen($value)-1);
			$record[$token_count] = $value;
			$token = strtok(";\r\n");
		}
          // Oops if we don't have 1 tokens
		if ($token_count != 1){
		    print("Line $count is mal-formed. --> [$line]\r\n<br>");
			continue;
		}
          // Insert the row into the table
		db_insert_row($record[1]);
	}

     print "Loaded $count rows into the info table from '" .TEXTFILENAME_IN . "' flat file";
	
	// close the file and the database connection	
	fclose($fd);
	mysql_close($link);
}

/*
** Dump the database table to a flat file using the same format that is used
** by db_load_from_file().
*/
function db_dump_to_file()
{
     // get your connection to the database, and open the flat file for writing
	$link = db_connect();
	$fo = fopen(TEXTFILENAME_OUT,"w") or die("Can't open filename ". TEXTFILENAME_OUT);

     // select all records in the table
	$result = mysql_query("SELECT title FROM info");

     // process each row in the result set
	$count = 0;
	while($row = mysql_fetch_row($result)){
          // format the line by putting " around fields and ; between fields
    	     $line = "\"$row[0]\"\r\n";
          // write the line to the flat file
         	fputs($fo,$line,strlen($line));
		$count += 1;
	}
	print ("sqlfuncs: wrote $count records to flat file '" . TEXTFILENAME_OUT . "'.<br>\r\n");

     // close the output file and the database connection
	fclose($fo);
	mysql_close($link);
}

/*
** lookup a record in the database by title. This is used by
** the add script to make sure the title you are trying to add
** isn't already in the database.
*/
function db_lookup_record($title)
{
     // get a connection, then do a query looking for a title match
     $link = db_connect();
     $sql = "SELECT * FROM `info` WHERE title='$title'";
     $result = mysql_query($sql);
     // see how many rows were found and return that result
     $found = mysql_num_rows($result);
     mysql_close($link);

     return $found;           // 0 if none found
}

/*
** Read a record from the database. This is used by the delete and update
** scripts to read the specific record for display purposes. It returns a
** record in an array with named elements, and an element 'ok' which is
** either 0 or 1. 0 means not found, 1 means the record was found.
*/
function db_read_record($uid)
{
     // get a connection, and do a lookup by the record ID
	$link = db_connect();
	$sql = "SELECT title FROM `info` WHERE uid=$uid";
	$result = mysql_query($sql);

     if (!$result){                // if it failed, the record isn't there
	    $record['ok'] = 0;        // simply return an array with 'ok' set to 0
		mysql_close($link);
		return $record;
	}

     // fetch the row and break out the fields into the record array
	$row = mysql_fetch_row($result);
	
	$record['title']  = $row[0];
	$record['format'] = $row[1];
	$record['genre']  = $row[2];
	$record['rating'] = $row[3];
	$record['loanee'] = $row[4];
     $record['imdbid'] = $row[5];
	
     // close the connection, set 'ok' to 1, and return the record
	mysql_close($link);
	$record['ok'] = 1;
	return $record;
}

/*
** update a record in the database. used by the update script.
*/
function db_write_record($alias, $uid, $record)
{
     // get a connection, then break down the fields from the record array
	$link = db_connect();

	$title  = $record['title'];
	
     // form the SQL Update statement
	$sql = "UPDATE `info` SET `title` = '$title' 
						 WHERE `uid` = $uid LIMIT 1"; 

     // execute the statement and close the connection
	$result = mysql_query($sql);
     if (!$result){
		print("$alias failed updating record id $uid\r\n<br>");
	}
	mysql_close($link);
}

/*
** remove a record from the database. used by the delete script.
*/
function db_delete_record($alias, $uid)
{
     // get a connection
	$link = db_connect();

     // form the delete statement
	$sql = "DELETE FROM `info` WHERE `uid` = $uid LIMIT 1"; 

	// execute the statement and close the connection
	$result = mysql_query($sql);
     if (!$result){
		print("$alias failed deleting record id $uid\r\n<br>");
	}
	mysql_close($link);
}

/*
** add a record to the database. used by the add script.
*/
function db_add_record($alias, $record)
{
	// get a connection
	$link = db_connect();

     // extract the fields from the record array
	$title  = $record['title'];

     // insert the row into the table	
	$result = db_insert_row($title);
	
     if (!$result){
		print("$alias failed adding record \"$title\"\r\n<br>");
	}
	// close the connection
	mysql_close($link);
}

/*
** the following functions are helpers that assist the display script with
** forming a proper query. the parts of the SQL statement are broken down
** so that I can insert a WHERE clause if a filter has been set on the
** search page.
*/
function db_get_order_by()
{
	return "ORDER BY title";      // always display alphabetical by title
}

/*
** the main part of the select statement
*/
function db_get_select()
{
	return "SELECT title, uid FROM info";
}

/*
** the default query used if no filter in place (or when app first started).
*/
function db_get_standard_query()
{
	return db_get_select() . " " . db_get_order_by();
}

/*
** set the session query to the value passed in.
*/
function db_set_query($value)
{
	if ($value == NULL) $value = db_get_standard_query();
	
	$_SESSION['default_query'] =  $value;
}

/*
** returns the current query
*/
function db_get_query()
{
	return $_SESSION['default_query'];
}

/*
** we have to be able to keep track of how many rows are in the
** table so the display script can know when to stop paging. this
** function is called at the start of the session, and whenever
** the user performs an add or delete, in order to make sure that
** we always stay in sync. It is also called if the user sets a
** search filter.
*/
function db_count_rows()
{
	$link = db_connect();

	$result = mysql_query(db_get_query());
     if ($result){
		$_SESSION['total_rows'] = mysql_num_rows($result);
	}
	else {
		$_SESSION['total_rows'] = 0;
	}	
	mysql_close($link);
}

?>